// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using EfCore_Travel_Agency;

#nullable disable

namespace EFCoreTravelAgency.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceGroupId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2f53c24-4565-406f-8a6d-1fe2c7666dc7")
                        },
                        new
                        {
                            Id = new Guid("30f2b9b1-c7af-4c86-bd21-21d7f4a98146")
                        },
                        new
                        {
                            Id = new Guid("b70b0fbb-37ea-4cbe-8fab-d7014355aa75")
                        },
                        new
                        {
                            Id = new Guid("d03add67-9ffc-4a66-86b4-e680281a4b41")
                        });
                });

            modelBuilder.Entity("InvoiceGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InvoiceGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ffc5531-24a6-49ba-a6c9-5c8cee51d649"),
                            IssueDate = new DateTime(2015, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b0382f47-c34a-4d42-bfb6-d39a25b88afb"),
                            IssueDate = new DateTime(2015, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("611b9eed-ab46-46d8-a212-586ff7a2386d"),
                            IssueDate = new DateTime(2016, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Observation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfNights")
                        .HasColumnType("int");

                    b.Property<string>("TravelAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TravelAgent");

                    b.ToTable("Observations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("218a7b4f-d633-4400-9654-434542bd63d4"),
                            GuestName = "Walter White",
                            InvoiceId = new Guid("b2f53c24-4565-406f-8a6d-1fe2c7666dc7"),
                            NumberOfNights = 5,
                            TravelAgent = "James McGill"
                        },
                        new
                        {
                            Id = new Guid("62f5cffd-659c-4e23-ae2f-ba9056d397a6"),
                            GuestName = "Walter White",
                            InvoiceId = new Guid("b2f53c24-4565-406f-8a6d-1fe2c7666dc7"),
                            NumberOfNights = 3,
                            TravelAgent = "James McGill"
                        },
                        new
                        {
                            Id = new Guid("12975222-c271-4213-b394-64ea4096fb38"),
                            GuestName = "John Smith",
                            InvoiceId = new Guid("30f2b9b1-c7af-4c86-bd21-21d7f4a98146"),
                            NumberOfNights = 14,
                            TravelAgent = "Kim Wexler"
                        },
                        new
                        {
                            Id = new Guid("257ad6cc-9e05-48c3-aeb9-c3f421603af1"),
                            GuestName = "Michael Ehrmantraut",
                            InvoiceId = new Guid("b70b0fbb-37ea-4cbe-8fab-d7014355aa75"),
                            NumberOfNights = 30,
                            TravelAgent = "Howard Hamlin"
                        },
                        new
                        {
                            Id = new Guid("cb7fd10f-12cc-433d-ba28-4a26e8fcb825"),
                            GuestName = "Gustavo Fring",
                            InvoiceId = new Guid("d03add67-9ffc-4a66-86b4-e680281a4b41"),
                            NumberOfNights = 14,
                            TravelAgent = "Howard Hamlin"
                        },
                        new
                        {
                            Id = new Guid("8c00db50-3a8b-4c4c-b363-50f33afd6065"),
                            GuestName = "Gustavo Fring",
                            InvoiceId = new Guid("d03add67-9ffc-4a66-86b4-e680281a4b41"),
                            NumberOfNights = 5,
                            TravelAgent = "James McGill"
                        });
                });

            modelBuilder.Entity("Onyx_Tasks.Models.InvoiceGroupLink", b =>
                {
                    b.Property<Guid>("InvoiceGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceGroupId", "InvoiceId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceGroupLinks");

                    b.HasData(
                        new
                        {
                            InvoiceGroupId = new Guid("1ffc5531-24a6-49ba-a6c9-5c8cee51d649"),
                            InvoiceId = new Guid("b2f53c24-4565-406f-8a6d-1fe2c7666dc7")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("1ffc5531-24a6-49ba-a6c9-5c8cee51d649"),
                            InvoiceId = new Guid("30f2b9b1-c7af-4c86-bd21-21d7f4a98146")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("b0382f47-c34a-4d42-bfb6-d39a25b88afb"),
                            InvoiceId = new Guid("b2f53c24-4565-406f-8a6d-1fe2c7666dc7")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("b0382f47-c34a-4d42-bfb6-d39a25b88afb"),
                            InvoiceId = new Guid("b70b0fbb-37ea-4cbe-8fab-d7014355aa75")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("b0382f47-c34a-4d42-bfb6-d39a25b88afb"),
                            InvoiceId = new Guid("d03add67-9ffc-4a66-86b4-e680281a4b41")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("611b9eed-ab46-46d8-a212-586ff7a2386d"),
                            InvoiceId = new Guid("30f2b9b1-c7af-4c86-bd21-21d7f4a98146")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("611b9eed-ab46-46d8-a212-586ff7a2386d"),
                            InvoiceId = new Guid("b70b0fbb-37ea-4cbe-8fab-d7014355aa75")
                        },
                        new
                        {
                            InvoiceGroupId = new Guid("611b9eed-ab46-46d8-a212-586ff7a2386d"),
                            InvoiceId = new Guid("d03add67-9ffc-4a66-86b4-e680281a4b41")
                        });
                });

            modelBuilder.Entity("TravelAgentInfo", b =>
                {
                    b.Property<string>("TravelAgent")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalNumberOfNights")
                        .HasColumnType("int");

                    b.HasKey("TravelAgent");

                    b.ToTable("TravelAgentsInfo");

                    b.HasData(
                        new
                        {
                            TravelAgent = "James McGill",
                            TotalNumberOfNights = 13
                        },
                        new
                        {
                            TravelAgent = "Chuck McGill",
                            TotalNumberOfNights = 0
                        },
                        new
                        {
                            TravelAgent = "Kim Wexler",
                            TotalNumberOfNights = 14
                        },
                        new
                        {
                            TravelAgent = "Howard Hamlin",
                            TotalNumberOfNights = 44
                        });
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.HasOne("InvoiceGroup", null)
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceGroupId");
                });

            modelBuilder.Entity("Observation", b =>
                {
                    b.HasOne("Invoice", "Invoice")
                        .WithMany("Observations")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelAgentInfo", "TravelAgentInfo")
                        .WithMany("Observations")
                        .HasForeignKey("TravelAgent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("TravelAgentInfo");
                });

            modelBuilder.Entity("Onyx_Tasks.Models.InvoiceGroupLink", b =>
                {
                    b.HasOne("InvoiceGroup", "InvoiceGroup")
                        .WithMany("InvoiceGroupLinks")
                        .HasForeignKey("InvoiceGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice", "Invoice")
                        .WithMany("InvoiceGroupLinks")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("InvoiceGroup");
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Navigation("InvoiceGroupLinks");

                    b.Navigation("Observations");
                });

            modelBuilder.Entity("InvoiceGroup", b =>
                {
                    b.Navigation("InvoiceGroupLinks");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("TravelAgentInfo", b =>
                {
                    b.Navigation("Observations");
                });
#pragma warning restore 612, 618
        }
    }
}
