// <auto-generated />
using System;
using EfCore_Travel_Agency;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreTravelAgency.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231202140712_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceGroupId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InvoiceGroups");
                });

            modelBuilder.Entity("Observation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfNights")
                        .HasColumnType("int");

                    b.Property<string>("TravelAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TravelAgent");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("Onyx_Tasks.Models.InvoiceGroupLink", b =>
                {
                    b.Property<Guid>("InvoiceGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InvoiceGroupId", "InvoiceId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceGroupLinks");
                });

            modelBuilder.Entity("TravelAgentInfo", b =>
                {
                    b.Property<string>("TravelAgent")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalNumberOfNights")
                        .HasColumnType("int");

                    b.HasKey("TravelAgent");

                    b.ToTable("TravelAgentsInfo");
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.HasOne("InvoiceGroup", null)
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceGroupId");
                });

            modelBuilder.Entity("Observation", b =>
                {
                    b.HasOne("Invoice", "Invoice")
                        .WithMany("Observations")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelAgentInfo", "TravelAgentInfo")
                        .WithMany("Observations")
                        .HasForeignKey("TravelAgent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("TravelAgentInfo");
                });

            modelBuilder.Entity("Onyx_Tasks.Models.InvoiceGroupLink", b =>
                {
                    b.HasOne("InvoiceGroup", "InvoiceGroup")
                        .WithMany("InvoiceGroupLinks")
                        .HasForeignKey("InvoiceGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice", "Invoice")
                        .WithMany("InvoiceGroupLinks")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("InvoiceGroup");
                });

            modelBuilder.Entity("Invoice", b =>
                {
                    b.Navigation("InvoiceGroupLinks");

                    b.Navigation("Observations");
                });

            modelBuilder.Entity("InvoiceGroup", b =>
                {
                    b.Navigation("InvoiceGroupLinks");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("TravelAgentInfo", b =>
                {
                    b.Navigation("Observations");
                });
#pragma warning restore 612, 618
        }
    }
}
